services:
  redis:
    image: redis:7.2.5-alpine
    container_name: meme-maker-redis
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: meme-maker-backend
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=production
      - CLIPS_DIR=/app/clips
      - BASE_URL=https://memeit.pro
      - CORS_ORIGINS=["https://memeit.pro", "https://www.memeit.pro", "http://memeit.pro", "http://13.126.173.223"]
      - INSTAGRAM_COOKIES_B64=${INSTAGRAM_COOKIES_B64}
    ports:
      - "8000:8000"  # Expose backend on host port 8000 to match health check
    volumes:
      - ./storage:/app/clips
    command: >
      sh -c "
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 2 || 
        (echo '‚ùå Backend failed to start. Review logs above for errors.' && exit 1)
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend-new
      dockerfile: Dockerfile
    container_name: meme-maker-frontend
    restart: unless-stopped
    ports:
      - "8080:80"    # Frontend exposed on port 8080, nginx handles reverse proxy routing
    environment:
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: meme-maker-worker
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis:6379
      - CLIPS_DIR=/app/clips
      - BASE_URL=https://memeit.pro
      - ENVIRONMENT=production
      - INSTAGRAM_COOKIES_B64=IyBOZXRzY2FwZSBIVFRQIENvb2tpZSBGaWxlCiMgaHR0cDovL2N1cmwuaGF4eC5zZS9yZmMvY29va2llX3NwZWMuaHRtbAojIFRoaXMgaXMgYSBnZW5lcmF0ZWQgZmlsZSEgIERvIG5vdCBlZGl0LgoKLmluc3RhZ3JhbS5jb20JVFJVRQkvCVRSVUUJMTc4NjUyMDA5NQlkYXRyCUhzcHNhRW43b3ZMNUhzUXJmampLS1VxSQouaW5zdGFncmFtLmNvbQlUUlVFCS8JVFJVRQkxNzgzNDk2MTI0CWlnX2RpZAlFNTVBQjlCOC1CNzRBLTRFRDQtQjIwNS02MjA1MzFERDEzMDMKLmluc3RhZ3JhbS5jb20JVFJVRQkvCVRSVUUJMTc4MzQ5NjEyNAlpZ19ucmNiCTEKLmluc3RhZ3JhbS5jb20JVFJVRQkvCVRSVUUJMTc4NjUyMDEyNQlwc19sCTEKLmluc3RhZ3JhbS5jb20JVFJVRQkvCVRSVUUJMTc4NjUyMDEyNQlwc19uCTEKLmluc3RhZ3JhbS5jb20JVFJVRQkvCVRSVUUJMTc1OTg1NzA3Nglkc191c2VyX2lkCTQwMjkzOTY4MAouaW5zdGFncmFtLmNvbQlUUlVFCS8JVFJVRQkxNzUyNjg1ODczCWRwcgkxLjg3NQouaW5zdGFncmFtLmNvbQlUUlVFCS8JVFJVRQkxNzg2NjQxMDc2CWNzcmZ0b2tlbglnWEJkdXVNcElYNFRtWDVUN20zV2hBRjltZlEyNmFZVgouaW5zdGFncmFtLmNvbQlUUlVFCS8JVFJVRQkxNzg2NTIxMzk1CW1pZAlhR3pQTWdBTEFBRmJNbVRlNHNYVFROaXRiZWlECi5pbnN0YWdyYW0uY29tCVRSVUUJLwlUUlVFCTE3NTI2NzYyMzUJaWdfZGlyZWN0X3JlZ2lvbl9oaW50CSJSVkFcMDU0NDAyOTM5NjgwXDA1NDE3ODM2MDc0MzQ6MDFmZTc4NTRiZTdlNjA5OWI2ODZiYjU0MDE1ODljYTIzMzYyYjZmMTZlMWVmNDNiNTU1NzUwYjEzODg1MDVhM2EwZDdlMTBjIgouaW5zdGFncmFtLmNvbQlUUlVFCS8JVFJVRQkxNzUyNjg1ODczCXdkCTEwMjR4NDY4Ci5pbnN0YWdyYW0uY29tCVRSVUUJLwlUUlVFCTE3ODM2MTcwNzYJc2Vzc2lvbmlkCTQwMjkzOTY4MCUzQTVRcEh2bVFXODQ0ekxaJTNBMjQlM0FBWWRZVHI4cFpsRWQ2WmM1MTJScGxVWEI1Q184Y2kwcEJsMUhuMnF0bFEKLmluc3RhZ3JhbS5jb20JVFJVRQkvCVRSVUUJMAlydXIJIkhJTFwwNTQ0MDI5Mzk2ODBcMDU0MTc4MzYxNzA3NjowMWZlYjRiMjQ3NTE3MWQzOTE5MmZmY2FlYjViMGI3MWFkOTQ5ZTgyYWIyMTIxYmEwNDFkOTRkMjI1Zjg0ZDIwMGNkZmE3MjEiCg==

    volumes:
      - ./storage:/app/clips

  # prometheus:
  #   image: prom/prometheus
  #   container_name: meme-maker-prometheus
  #   restart: unless-stopped
  #   volumes:
  #     - prometheus-data:/prometheus
  #     - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"

  # grafana:
  #   image: grafana/grafana
  #   container_name: meme-maker-grafana
  #   restart: unless-stopped
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   ports:
  #     - "3001:3000"
  #   volumes:
  #     - grafana-data:/var/lib/grafana

# volumes:
#   prometheus-data:
#   grafana-data: