
# Use a smaller, more secure base image for production
FROM node:20-alpine AS base

# Set the working directory
WORKDIR /app

# Install dependencies using bun
RUN --mount=type=bind,source=package.json,target=package.json \
    --mount=type=cache,target=/root/.bun/install/cache \
    npm install -g bun && bun install

# Copy the rest of the application code
COPY . .

# --- Build Stage ---
FROM base AS build
# Build the application for production
# VITE_API_BASE_URL is passed as a build argument from docker-compose
ARG VITE_API_BASE_URL
ARG VITE_MODE
ENV VITE_API_BASE_URL=${VITE_API_BASE_URL}
ENV VITE_MODE=${VITE_MODE}
RUN bun run build

# --- Production Stage ---
FROM nginx:alpine AS production
# Remove default nginx configuration
RUN rm /etc/nginx/conf.d/default.conf
# Copy the built application from the build stage
COPY --from=build /app/dist /usr/share/nginx/html
# Copy the staging nginx configuration for serving the app with security headers
COPY nginx-staging.conf /etc/nginx/conf.d/default.conf
# Expose port 80 for nginx
EXPOSE 80
# Start nginx
CMD ["nginx", "-g", "daemon off;"]