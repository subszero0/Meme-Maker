services:
  redis:
    image: redis:7.2.5-alpine
    container_name: meme-maker-redis-dev
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server"]

  minio:
    image: minio/minio
    container_name: meme-maker-minio-dev
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin12345
    ports:
      - "9002:9000"
      - "9003:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: meme-maker-backend-dev
    depends_on:
      - redis
      - minio
    environment:
      - REDIS_URL=redis://redis:6379
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=admin12345
      - AWS_ENDPOINT_URL=http://minio:9000
      - S3_BUCKET=clips
    ports:
      - "8000:8000"
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: meme-maker-frontend-dev
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: meme-maker-worker-dev
    depends_on:
      - redis
      - minio
    environment:
      - REDIS_URL=redis://redis:6379
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=admin12345
      - AWS_ENDPOINT_URL=http://minio:9000
      - S3_BUCKET=clips
    command: ["python", "/app/worker/main.py"]

volumes:
  minio-data: 