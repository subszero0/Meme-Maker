version: '3.8'

services:
  redis-staging:
    image: redis:alpine
    ports:
      - "6381:6379"  # Different port from production (6380 used by security-test)
    volumes:
      - staging_redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - staging-network

  backend-staging:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8001:8000"  # Different port from production
    environment:
      - MODE=production
      - REDIS_URL=redis://redis-staging:6379
      - CORS_ORIGINS=http://localhost:8082,http://staging.memeit.pro:8081
      - STORAGE_TYPE=local
      - CLIPS_DIR=/app/storage/clips
      - INSTAGRAM_COOKIES_PATH=/app/cookies/instagram_cookies.txt
    volumes:
      - ./.env.staging:/app/.env:ro           # Mount staging env file for security testing
      - ./storage:/app/storage                # Storage mount
      - ./cookies:/app/cookies:ro             # Cookies mount
    depends_on:
      - redis-staging
    networks:
      - staging-network
    restart: unless-stopped
    # Ensure proper permissions for storage
    user: "1000:1000"

  worker-staging:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - MODE=production
      - REDIS_URL=redis://redis-staging:6379
      - STORAGE_TYPE=local
      - CLIPS_DIR=/app/storage/clips
      - INSTAGRAM_COOKIES_PATH=/app/cookies/instagram_cookies.txt
    volumes:
      - ./.env.staging:/app/.env:ro           # Mount staging env file for worker
      - ./storage:/app/storage                # Storage mount with proper permissions
      - ./cookies:/app/cookies:ro             # Cookies mount
    depends_on:
      - redis-staging
      - backend-staging
    networks:
      - staging-network
    restart: unless-stopped
    # Ensure proper permissions for storage
    user: "1000:1000"

  frontend-staging:
    build:
      context: frontend-new
      dockerfile: Dockerfile.dev
      args:
        - VITE_API_BASE_URL=/api  # Use relative URL for API calls
        - VITE_MODE=staging       # Set staging mode
        - VITE_HMR_ENABLED=false  # Disable HMR in staging
    environment:
      - NODE_ENV=production       # Use production mode for better performance
    ports:
      - "8082:80"  # Map to container's port 80 (nginx)
    depends_on:
      - backend-staging
    networks:
      - staging-network
    restart: unless-stopped

networks:
  staging-network:
    driver: bridge

volumes:
  staging_redis_data: 